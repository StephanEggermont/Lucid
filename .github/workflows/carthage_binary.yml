##
# This workflow is triggered when a new version of Lucid is released, for example v1.0.3.
#
#     To trigger a new release run these commands:
#           bin/bbn.sh
#           bin/push-new-release.sh
#           git push -u origin master
#
##

name: Publish Carthage Binary
on: 
  push: 
    tags:
      - 'v*'
jobs:
  carthage_archive:
    name: Build Framework for binary export
    runs-on: macos-latest
    env:
      GITHUB_ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}
      DEVELOPER_DIR: /Applications/Xcode_11.2.1.app/Contents/Developer
      CARTHAGE_BOOTSTRAP_OUTPUT: carthage_bootstrap_output.log
      CARTHAGE_BUILD_OUTPUT: carthage_build_output.log
    steps:
      - name: Clone Project
        uses: actions/checkout@v2

      - name: Bootstrap
        run: carthage bootstrap --platform iOS,watchOS --log-path $CARTHAGE_BOOTSTRAP_OUTPUT

      - name: Build Framework
        run: XCODE_XCCONFIG_FILE="Carthage/Patches/lucid.xcconfig" carthage build Lucid --no-skip-current --platform iOS,watchOS --log-path $CARTHAGE_BUILD_OUTPUT

      - name: Generate Archive for Release
        run: carthage archive Lucid

      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: Lucid.framework.zip
          path: Lucid.framework.zip

      - name: Upload Log Files
        if: ${{ always() }}
        uses: actions/upload-artifact@v2
        with:
          name: build-log
          path: |
            ${{ env.CARTHAGE_BOOTSTRAP_OUTPUT }}
            ${{ env.CARTHAGE_BUILD_OUTPUT }}

  release:
    name: Release
    runs-on: ubuntu-latest
    needs: carthage_archive
    steps:
      - name: Download Artifact
        uses: actions/download-artifact@v2
        with:
          name: Lucid.framework.zip

      - name: Publish Release
        uses: fnkr/github-action-ghr@v1
        env:
          GHR_PATH: Lucid.framework.zip
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  carthage_test:
    name: Carthage Test
    runs-on: macos-latest
    needs: release
    env: 
      DEVELOPER_DIR: /Applications/Xcode_11.2.1.app/Contents/Developer
      GITHUB_ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}
      CARTHAGE_OUTPUT: carthage_output.txt
    steps:
      - name: Retrieve Latest Lucid Framework Using Carthage
        run: |
          echo 'git "git@github.com:scribd/Lucid.git"' > Cartfile
          carthage bootstrap --platform iOS,watchOS --log-path $CARTHAGE_OUTPUT

      - name: Upload Log Files
        if: ${{ always() }}
        uses: actions/upload-artifact@v2
        with:
          name: build-log
          path: ${{ env.CARTHAGE_OUTPUT }}
